# Generated by Django 4.2.20 on 2025-06-05 03:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cognition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('raw_content', models.TextField(help_text='The original, unprocessed text')),
                ('is_starred', models.BooleanField(default=False, help_text='Indicates if this cognition is starred for quick access')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False, help_text='Whether this cognition is shared publicly')),
                ('share_date', models.DateTimeField(blank=True, help_text='When this cognition was shared', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cognitions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('position', models.PositiveIntegerField()),
                ('character_count', models.PositiveIntegerField()),
                ('is_illuminated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cognition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='api.cognition')),
            ],
            options={
                'ordering': ['position'],
                'unique_together': {('cognition', 'position')},
            },
        ),
        migrations.CreateModel(
            name='PresetResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('category', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('widget_type', models.CharField(choices=[('author_remark', 'Author Remark'), ('author_quiz', 'Author Quiz'), ('author_dialog', 'Author Dialog'), ('reader_llm', 'Reader LLM Response'), ('reader_remark', 'Reader Remark')], max_length=20)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('quiz_question', models.TextField(blank=True)),
                ('quiz_choices', models.JSONField(blank=True, default=list)),
                ('quiz_correct_answer', models.CharField(blank=True, max_length=1)),
                ('quiz_explanation', models.TextField(blank=True)),
                ('llm_preset', models.CharField(blank=True, choices=[('simplify', 'Simplify this node'), ('analogy', 'Provide analogy'), ('bullets', 'Make bulleted list'), ('summary', 'Summarize'), ('questions', 'Generate questions')], max_length=20)),
                ('llm_custom_prompt', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=False)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='api.node')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['position', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to='api.userprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WidgetInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('quiz_answer', models.CharField(blank=True, max_length=1)),
                ('interaction_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='api.widget')),
            ],
            options={
                'unique_together': {('widget', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Arc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arc_type', models.CharField(choices=[('similarity', 'Similarity'), ('contrast', 'Contrast'), ('cause_effect', 'Cause and Effect'), ('example', 'Example'), ('elaboration', 'Elaboration'), ('sequence', 'Sequence'), ('custom', 'Custom')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('strength', models.IntegerField(default=5, help_text='Strength of connection (1-10)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_arcs', to='api.node')),
                ('target_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_arcs', to='api.node')),
            ],
            options={
                'unique_together': {('source_node', 'target_node', 'arc_type')},
            },
        ),
    ]
